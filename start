#!/usr/bin/env python3

import pymarketcap, decimal
from operator import itemgetter
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('-m','--minimum_vol',type=int,help='Minimum Percent volume per exchange to have to count',default=1)
parser.add_argument('-p','--trading_pairs',nargs='*',default=[],help='Pairs the coins can be arbitraged with - default=all')
parser.add_argument('-c','--coins_shown',type=int,default=10,help='Number of coins to show')
parser.add_argument('-e','--exchanges',nargs='*',help='Acceptable Exchanges - default=all',default=[])
parser.add_argument('-at','--all_trading_pairs',help='Allow all trading pairs',default=False)
parser.add_argument('-v','--verbose',help='Show errors and settings',default=False,action="store_true")
args = parser.parse_args()
cmc = pymarketcap.Pymarketcap()
info = []
count = 1
lowercase_exchanges = [x.lower() for x in args.exchanges]
all_exchanges = not bool(args.exchanges)
all_trading_pairs = not bool(args.trading_pairs)
if args.verbose:
    print('CURRENT SETTINGS\n* MINIMUM_PERCENT_VOL:{}\n* TRADING_PAIRS:{}\n* COINS_SHOWN:{}\n* EXCHANGES:{}\n* ALL_TRADING_PAIRS:{}\n* ALL_EXCHANGES:{}\n'.format(args.minimum_vol,args.trading_pairs,args.coins_shown,lowercase_exchanges,all_trading_pairs,all_exchanges))
for coin in cmc.ticker():
    try:
        markets = cmc.markets(coin["id"])
    except Exception as e:
        markets = cmc.markets(coin["symbol"])

    best_price = 0
    best_exchange = ''
    best_pair = ''
    worst_price = 999999
    worst_exchange = ''
    worst_pair = ''
    is_up = False
    for market in markets:
        trades_into = market["pair"].replace(coin["symbol"],"").replace("-","")
        if market['percent_volume'] >= args.minimum_vol and market['updated'] and (trades_into in args.trading_pairs or all_trading_pairs) and (market['exchange'].lower() in lowercase_exchanges or all_exchanges):
            is_up = True
            if market['price_usd'] >= best_price:
                best_price = market['price_usd']
                best_exchange = market['exchange']
                best_pair = trades_into
            if market['price_usd'] <= worst_price:
                worst_price = market['price_usd']
                worst_exchange = market['exchange']
                worst_pair = trades_into
    if is_up:
        info.append([coin['name'],round((best_price/worst_price-1)*100,2),worst_price,worst_exchange,worst_pair,best_price,best_exchange,best_pair])
    else:
        if args.verbose:
            print(coin['name'],'had no markets that fit the criteria.')
    print('[{}/100]'.format(count),end='\r')
    count += 1
info = sorted(info,key=itemgetter(1))[::-1]
print('{: <25} {: >6}% {: >10} {: >15} {: <10} {: <10} {: <15} {: <5}'.format("COIN","CHANGE","BUY PRICE","BUY AT","BUY WITH","SELL PRICE","SELL AT","SELL WITH"))
for coin in info[0:args.coins_shown]:
    print('{: <25} {: >6}% {: >10} {: >15} {: <10} {: <10} {: <15} {: <5}'.format(*coin))
